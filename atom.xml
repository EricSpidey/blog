<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spidey  World</title>
  
  <subtitle>Spidey  World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://wikihero.top/"/>
  <updated>2019-04-28T10:19:07.490Z</updated>
  <id>https://wikihero.top/</id>
  
  <author>
    <name>Spidey小深</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript实现模糊查询的方法</title>
    <link href="https://wikihero.top/2019/04/28/fuzzyQuery/"/>
    <id>https://wikihero.top/2019/04/28/fuzzyQuery/</id>
    <published>2019-04-28T10:02:31.000Z</published>
    <updated>2019-04-28T10:19:07.490Z</updated>
    
    <content type="html"><![CDATA[<p>最近自己制作了一个超级英雄题材的网站<a href="https:wikihero.top" target="_blank" rel="noopener">wikihero.top</a>，需要用到搜索功能，数据已经存在一个数组里，没有必要用ajax进行http请求，所以决定用原生JS来做这个功能</p><p>而关于原生JS，能够实现模糊查询的有四个方法:indexOf()、match()、test()和spilt()，其中，能实现我想要功能的，为indexOf()和match()，但这里四个都说一下。</p><h2 id="indexOf"><a href="#indexOf" class="headerlink" title="indexOf"></a>indexOf</h2><p>定义和用法<br>indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。<br>如果没有找到匹配的字符串则返回 -1。<br>注意： indexOf() 方法区分大小写。</p><p>语法<br>string.indexOf(searchvalue,start)</p><p>参数与描述<br>searchvalue     必需。规定需检索的字符串值。<br>start     可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 string Object.length - 1。如省略该参数，则将从字符串的首字符开始检索。</p><hr><h2 id="match"><a href="#match" class="headerlink" title="match"></a>match</h2><p>定义和用法<br>match() 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。<br>注意： match() 方法将检索字符串 String Object，以找到一个或多个与 regexp 匹配的文本。这个方法的行为在很大程度上有赖于 regexp 是否具有标志 g。如果 regexp 没有标志 g，那么 match() 方法就只能在 stringObject 中执行一次匹配。如果没有找到任何匹配的文本， match() 将返回 null。否则，它将返回一个数组，其中存放了与它找到的匹配文本有关的信息。</p><p>语法<br>string.match(regexp)</p><p>参数与描述<br>regexp     必需。规定要匹配的模式的 RegExp 对象。如果该参数不是 RegExp 对象，则需要首先把它传递给 RegExp 构造函数，将其转换为 RegExp 对象。</p><hr><h2 id="test"><a href="#test" class="headerlink" title="test"></a>test</h2><p>定义和用法<br>test() 方法用于检测一个字符串是否匹配某个模式.<br>如果字符串中有匹配的值返回 true ，否则返回 false。</p><p>语法<br>RegExpObject.test(string)</p><p>参数与描述<br>string     必需。要检测的字符串。</p><hr><h2 id="split"><a href="#split" class="headerlink" title="split"></a>split</h2><p>定义和用法<br>split() 方法用于把一个字符串分割成字符串数组。<br>提示： 如果把空字符串 (“”) 用作 separator，那么 stringObject 中的每个字符之间都会被分割。<br>注意： split() 方法不改变原始字符串。</p><p>语法<br>string.split(separator,limit)</p><p>参数与描述<br>separator     可选。字符串或正则表达式，从该参数指定的地方分割 string Object。<br>limit     可选。该参数可指定返回的数组的最大长度。如果设置了该参数，返回的子串不会多于这个参数指定的数组。如果没有设置该参数，整个字符串都会被分割，不考虑它的长度。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近自己制作了一个超级英雄题材的网站&lt;a href=&quot;https:wikihero.top&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;wikihero.top&lt;/a&gt;，需要用到搜索功能，数据已经存在一个数组里，没有必要用ajax进行http请求，所以决
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在linux服务器上进行nginx的配置</title>
    <link href="https://wikihero.top/2019/04/10/nginxConfiguration/"/>
    <id>https://wikihero.top/2019/04/10/nginxConfiguration/</id>
    <published>2019-04-10T13:03:28.000Z</published>
    <updated>2019-04-28T15:47:39.837Z</updated>
    
    <content type="html"><![CDATA[<p>几个月前自己用学生价买了半年的腾讯云服务器，在上面搭了个网站，需要用到nginx进行ip的配置</p><p>用putty进入linux服务器后，先查找nginx.conf这个配置文件在哪，可以用find / -name nginx，也可以用whereis nginx进行查找</p><p>找到之后，在http的server作用域里加上以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"> server &#123;</span><br><span class="line">        listen  80  default;</span><br><span class="line">        server_name myheroes.xyz;    </span><br><span class="line">        #这里也可以填ip,域名和ip只能选一个</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>之后，进入到nginx安装目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ...nginx/sbin</span><br></pre></td></tr></table></figure></p><p>./nginx -t</p><p>./nginx -s reload</p><p>重启nginx服务器，部署http网站完成</p><p>接下来就是为网站加上https证书，在腾讯云或阿里云注册一个域名后，可以为域名申请免费的SSL证书,证书下载后包含bundle.crt和key两个文件，需要放置在项目打包的目录下</p><p>在nginx配置的443作用域(https)里加上这两个文件</p><p> ssl_certificate      ./<strong>**</strong>.crt;<br> ssl_certificate_key  ./<strong>**</strong>.key;</p><p> 之后也是要重启nginx服务器，部署https网站完成</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;几个月前自己用学生价买了半年的腾讯云服务器，在上面搭了个网站，需要用到nginx进行ip的配置&lt;/p&gt;
&lt;p&gt;用putty进入linux服务器后，先查找nginx.conf这个配置文件在哪，可以用find / -name nginx，也可以用whereis nginx进行查
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小程序云开发中云函数的使用</title>
    <link href="https://wikihero.top/2019/04/08/cloudFunction/"/>
    <id>https://wikihero.top/2019/04/08/cloudFunction/</id>
    <published>2019-04-08T10:22:03.000Z</published>
    <updated>2019-04-28T12:56:59.439Z</updated>
    
    <content type="html"><![CDATA[<p>想必也是为了节省开发者的开发成本与精力，小程序开发工具提供了云开发功能作为后端服务器来支撑前端的操作，这其中，小程序的云函数则是操作数据库的核心功能</p><p>在使用云函数前，要先获取数据库的引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const db = wx.cloud.database()</span><br></pre></td></tr></table></figure><p>read<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.collection(&apos;todos&apos;).doc(&apos;todo-identifiant-aleatoire&apos;).get(&#123;</span><br><span class="line">  success(res) &#123;</span><br><span class="line">    // res.data 包含该记录的数据</span><br><span class="line">    console.log(res.data)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>create<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">db.collection(&apos;todos&apos;).add(&#123;</span><br><span class="line">  // data 字段表示需新增的 JSON 数据</span><br><span class="line">  data: &#123;</span><br><span class="line">    description: &apos;learn cloud database&apos;,</span><br><span class="line">    due: new Date(&apos;2018-09-01&apos;),</span><br><span class="line">    tags: [</span><br><span class="line">      &apos;cloud&apos;,</span><br><span class="line">      &apos;database&apos;</span><br><span class="line">    ],</span><br><span class="line">    location: new db.Geo.Point(113, 23),</span><br><span class="line">    done: false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">  .then(res =&gt; &#123;</span><br><span class="line">    console.log(res)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure></p><p>update<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">db.collection(&apos;todos&apos;).doc(&apos;todo-identifiant-aleatoire&apos;).update(&#123;</span><br><span class="line">  // data 传入需要局部更新的数据</span><br><span class="line">  data: &#123;</span><br><span class="line">    // 表示将 done 字段置为 true</span><br><span class="line">    done: true</span><br><span class="line">  &#125;,</span><br><span class="line">  success(res) &#123;</span><br><span class="line">    console.log(res.data)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>delete（删除一条记录）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.collection(&apos;todos&apos;).doc(&apos;todo-identifiant-aleatoire&apos;).remove(&#123;</span><br><span class="line">  success(res) &#123;</span><br><span class="line">    console.log(res.data)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;想必也是为了节省开发者的开发成本与精力，小程序开发工具提供了云开发功能作为后端服务器来支撑前端的操作，这其中，小程序的云函数则是操作数据库的核心功能&lt;/p&gt;
&lt;p&gt;在使用云函数前，要先获取数据库的引用&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vue双向数据绑定的原理</title>
    <link href="https://wikihero.top/2019/03/20/VueDataBinding/"/>
    <id>https://wikihero.top/2019/03/20/VueDataBinding/</id>
    <published>2019-03-19T16:08:54.000Z</published>
    <updated>2019-04-28T22:21:14.987Z</updated>
    
    <content type="html"><![CDATA[<p>Vue是通过Object​.define​Property( )来进行数据劫持的，这是个ES5的方法</p><p>语法<br>Object.defineProperty(obj, prop, descriptor)</p><p>obj 要在其上定义属性的对象。<br>prop 要定义或修改的属性的名称。<br>descriptor 将被定义或修改的属性描述符。 </p><p>通过getter和setter进行读取和赋值的属性，这一步属于发布——订阅者模式</p><p>首先要设置一个监听器Observer,用来监听所有的属性，当属性变化时，就需要通知订阅者Watcher,看是否需要更新．因为属性可能是多个，所以会有多个订阅者，故我们需要一个消息订阅器Dep来专门收集这些订阅者，并在监听器Observer和订阅者Watcher之间进行统一的管理．因为在节点元素上可能存在一些指令，所以我们还需要有一个指令解析器Compile，对每个节点元素进行扫描和解析，将相关指令初始化成一个订阅者Watcher，并替换模板数据并绑定相应的函数，这时候当订阅者Watcher接受到相应属性的变化，就会执行相对应的更新函数，从而更新视图</p><p>MVVM作为数据绑定的入口，整合Observer、Compile和Watcher三者，通过Observer来监听自己的model数据变化，通过Compile来解析编译模板指令，最终利用Watcher搭起Observer和Compile之间的通信桥梁，达到数据变化 -&gt; 视图更新；视图交互变化(input) -&gt; 数据model变更的双向绑定效果。</p><p>当data中的某一项数据发生改变时，将调用这个属性的Dep的notify方法，通知订阅了该属性的Watcher调用自身的update方法改变DOM</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Vue是通过Object​.define​Property( )来进行数据劫持的，这是个ES5的方法&lt;/p&gt;
&lt;p&gt;语法&lt;br&gt;Object.defineProperty(obj, prop, descriptor)&lt;/p&gt;
&lt;p&gt;obj 要在其上定义属性的对象。&lt;br&gt;p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>码微信小程序时对于主要功能的实现分析（用户阅读数、点赞和评论）</title>
    <link href="https://wikihero.top/2019/03/08/webariticle/"/>
    <id>https://wikihero.top/2019/03/08/webariticle/</id>
    <published>2019-03-08T13:28:56.667Z</published>
    <updated>2019-04-28T10:19:58.575Z</updated>
    
    <content type="html"><![CDATA[<p>先放上自己的小程序：小深眼中的英雄宇宙</p><p><img src="../webariticle/logo.jpg" alt></p><p>在制作小程序时，需要引入点赞和评论功能</p><p><img src="../webariticle/logo1.JPG" alt></p><p>点赞功能需要保存用户点赞后的状态，这里可以用StorageSync缓存来实现，类似一个轻便的数据库，里面存入了up_status的点赞状态字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">//将点赞状态赋值给up_status</span><br><span class="line">if (!postData.up_status) &#123;</span><br><span class="line">          postData.up_status = true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          postData.up_status = false;</span><br><span class="line">        &#125;</span><br><span class="line">...   </span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">this.execSetStorageSync(allPostData);//将点赞状态存入缓存</span><br><span class="line">    return postData;//给用户一个实时的点赞反馈，我这里在之后将postData关联到点赞的动画上</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>阅读数和评论功能可以使用云服务器的数据库和云函数来实现CRUD操作，我这里直接使用小程序自带的云开发功能</p><p>在云服务器里创建好数据库后，利用云函数来操作数据库里的字段就可以了</p><p>例如：用户在点击某篇文章时执行数据库某条记录某个字段的+1操作，在进入文章页面时执行查询这个字段的函数，最后显示在页面上</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先放上自己的小程序：小深眼中的英雄宇宙&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../webariticle/logo.jpg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;在制作小程序时，需要引入点赞和评论功能&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../webariticle/logo1.JPG&quot; 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>网页在上传到服务器后无法正常跳转的解决方法（错误页面：404 Not Found nginx/版本号）</title>
    <link href="https://wikihero.top/2019/03/05/hello-world/"/>
    <id>https://wikihero.top/2019/03/05/hello-world/</id>
    <published>2019-03-05T09:28:47.382Z</published>
    <updated>2019-03-08T13:15:27.001Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间自己写了一个网站myheroes.xyz,上传到服务器后可以正常渲染首页，但无法跳转到其他页面，一跳就报404 Not Found nginx/版本号错误</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><h3 id="首先想到有没有可能是路径的问题，因为我是用vue码的网站，而vue项目目录下的config-index-js里有两个关于路径的配置，一个是在本机调试时dev下assetsPublicPath的配置"><a href="#首先想到有没有可能是路径的问题，因为我是用vue码的网站，而vue项目目录下的config-index-js里有两个关于路径的配置，一个是在本机调试时dev下assetsPublicPath的配置" class="headerlink" title="首先想到有没有可能是路径的问题，因为我是用vue码的网站，而vue项目目录下的config/index.js里有两个关于路径的配置，一个是在本机调试时dev下assetsPublicPath的配置"></a>首先想到有没有可能是路径的问题，因为我是用vue码的网站，而vue项目目录下的config/index.js里有两个关于路径的配置，一个是在本机调试时dev下assetsPublicPath的配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dev: &#123;</span><br><span class="line"></span><br><span class="line">   ...</span><br><span class="line">    assetsPublicPath: &apos;/&apos;,</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p>这里用’/‘是对的，默认也是这个，如果不小心改错了，调试时页面会渲染出cannot get /的错误</p><h3 id="还有一个是打包上传到服务器时的路径配置，在build代码段里的assetsPublicPath"><a href="#还有一个是打包上传到服务器时的路径配置，在build代码段里的assetsPublicPath" class="headerlink" title="还有一个是打包上传到服务器时的路径配置，在build代码段里的assetsPublicPath"></a>还有一个是打包上传到服务器时的路径配置，在build代码段里的assetsPublicPath</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">build: &#123;</span><br><span class="line">  ...</span><br><span class="line">    assetsPublicPath: &apos;/&apos;,</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>这里也是’/‘，默认也是，至于为什么不用改为’./‘，很明显vue的配置文件已经把’/‘看做根目录，所有的路径查询都会从根目录开始，而加个’.’后配置文件就识别不了了</p><p>确认自己没有手滑加’.’后，自己也在本机上运行项目，网页的跳转也没有问题，这时就把问题转移到服务器的配置文件上</p><h3 id="nginx-conf配置文件"><a href="#nginx-conf配置文件" class="headerlink" title="nginx.conf配置文件"></a>nginx.conf配置文件</h3><p>nginx.conf配置文件上有关跳转的配置就集中在location代码段上，在网上查询了其他人的nginx配置后，终于找到了问题，因为我的vue项目路由使用了history模式，而与之匹配的，就需要我在配置文件里将客户端所请求的url进行重定向操作，这个重定向操作作用在用户执行网页跳转时，而我漏掉了这个配置，所以我只能渲染出首页，再进行跳转就会报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">...</span><br><span class="line">  try_files $uri $uri/ /index.html last;</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后再重启nginx后，页面就可以正常跳转了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前段时间自己写了一个网站myheroes.xyz,上传到服务器后可以正常渲染首页，但无法跳转到其他页面，一跳就报404 Not Found nginx/版本号错误&lt;/p&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
  </entry>
  
</feed>
